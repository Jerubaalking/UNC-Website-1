
<head>
    <link rel="icon" href="/public/images/logo-black.png" type="image/png">
    <link rel="stylesheet" href="/public/css/bootstrap.one.min.css">
    <script src="/sites/default/files/google_tag/primary/google_tag.script.js?r7g58m" defer=""></script>
    <script>window.a2a_config = window.a2a_config || {}; a2a_config.callbacks = []; a2a_config.overlays = []; a2a_config.templates = {}; a2a_config.icon_color = "transparent,black";</script>
    <script type="text/javascript">
        // https://github.com/js-cookie/js-cookie
        // @todo: need use new version.
        !function (e) { var n = !1; if ("function" == typeof define && define.amd && (define(e), n = !0), "object" == typeof exports && (module.exports = e(), n = !0), !n) { var o = window.Cookies, t = window.Cookies = e(); t.noConflict = function () { return window.Cookies = o, t } } }(function () { function e() { for (var e = 0, n = {}; e < arguments.length; e++) { var o = arguments[e]; for (var t in o) n[t] = o[t] } return n } return function n(o) { function t(n, r, i) { var c; if ("undefined" != typeof document) { if (arguments.length > 1) { if ("number" == typeof (i = e({ path: "/" }, t.defaults, i)).expires) { var a = new Date; a.setMilliseconds(a.getMilliseconds() + 864e5 * i.expires), i.expires = a } i.expires = i.expires ? i.expires.toUTCString() : ""; try { c = JSON.stringify(r), /^[\{\[]/.test(c) && (r = c) } catch (e) { } r = o.write ? o.write(r, n) : encodeURIComponent(String(r)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent), n = (n = (n = encodeURIComponent(String(n))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape); var s = ""; for (var f in i) i[f] && (s += "; " + f, !0 !== i[f] && (s += "=" + i[f])); return document.cookie = n + "=" + r + s } n || (c = {}); for (var p = document.cookie ? document.cookie.split("; ") : [], d = /(%[0-9A-Z]{2})+/g, u = 0; u < p.length; u++) { var l = p[u].split("="), C = l.slice(1).join("="); this.json || '"' !== C.charAt(0) || (C = C.slice(1, -1)); try { var g = l[0].replace(d, decodeURIComponent); if (C = o.read ? o.read(C, g) : o(C, g) || C.replace(d, decodeURIComponent), this.json) try { C = JSON.parse(C) } catch (e) { } if (n === g) { c = C; break } n || (c[g] = C) } catch (e) { } } return c } } return t.set = t, t.get = function (e) { return t.call(t, e) }, t.getJSON = function () { return t.apply({ json: !0 }, [].slice.call(arguments)) }, t.defaults = {}, t.remove = function (n, o) { t(n, "", e(o, { expires: -1 })) }, t.withConverter = n, t }(function () { }) });

        /**
         * Promise: polyfill https://github.com/taylorhakes/promise-polyfill
         */
        !function (e, n) { "object" == typeof exports && "undefined" != typeof module ? n() : "function" == typeof define && define.amd ? define(n) : n() }(0, function () { "use strict"; function e(e) { var n = this.constructor; return this.then(function (t) { return n.resolve(e()).then(function () { return t }) }, function (t) { return n.resolve(e()).then(function () { return n.reject(t) }) }) } function n() { } function t(e) { if (!(this instanceof t)) throw new TypeError("Promises must be constructed via new"); if ("function" != typeof e) throw new TypeError("not a function"); this._state = 0, this._handled = !1, this._value = undefined, this._deferreds = [], u(e, this) } function o(e, n) { for (; 3 === e._state;)e = e._value; 0 !== e._state ? (e._handled = !0, t._immediateFn(function () { var t = 1 === e._state ? n.onFulfilled : n.onRejected; if (null !== t) { var o; try { o = t(e._value) } catch (f) { return void i(n.promise, f) } r(n.promise, o) } else (1 === e._state ? r : i)(n.promise, e._value) })) : e._deferreds.push(n) } function r(e, n) { try { if (n === e) throw new TypeError("A promise cannot be resolved with itself."); if (n && ("object" == typeof n || "function" == typeof n)) { var o = n.then; if (n instanceof t) return e._state = 3, e._value = n, void f(e); if ("function" == typeof o) return void u(function (e, n) { return function () { e.apply(n, arguments) } }(o, n), e) } e._state = 1, e._value = n, f(e) } catch (r) { i(e, r) } } function i(e, n) { e._state = 2, e._value = n, f(e) } function f(e) { 2 === e._state && 0 === e._deferreds.length && t._immediateFn(function () { e._handled || t._unhandledRejectionFn(e._value) }); for (var n = 0, r = e._deferreds.length; r > n; n++)o(e, e._deferreds[n]); e._deferreds = null } function u(e, n) { var t = !1; try { e(function (e) { t || (t = !0, r(n, e)) }, function (e) { t || (t = !0, i(n, e)) }) } catch (o) { if (t) return; t = !0, i(n, o) } } var c = setTimeout; t.prototype["catch"] = function (e) { return this.then(null, e) }, t.prototype.then = function (e, t) { var r = new this.constructor(n); return o(this, new function (e, n, t) { this.onFulfilled = "function" == typeof e ? e : null, this.onRejected = "function" == typeof n ? n : null, this.promise = t }(e, t, r)), r }, t.prototype["finally"] = e, t.all = function (e) { return new t(function (n, t) { function o(e, f) { try { if (f && ("object" == typeof f || "function" == typeof f)) { var u = f.then; if ("function" == typeof u) return void u.call(f, function (n) { o(e, n) }, t) } r[e] = f, 0 == --i && n(r) } catch (c) { t(c) } } if (!e || "undefined" == typeof e.length) throw new TypeError("Promise.all accepts an array"); var r = Array.prototype.slice.call(e); if (0 === r.length) return n([]); for (var i = r.length, f = 0; r.length > f; f++)o(f, r[f]) }) }, t.resolve = function (e) { return e && "object" == typeof e && e.constructor === t ? e : new t(function (n) { n(e) }) }, t.reject = function (e) { return new t(function (n, t) { t(e) }) }, t.race = function (e) { return new t(function (n, t) { for (var o = 0, r = e.length; r > o; o++)e[o].then(n, t) }) }, t._immediateFn = "function" == typeof setImmediate && function (e) { setImmediate(e) } || function (e) { c(e, 0) }, t._unhandledRejectionFn = function (e) { void 0 !== console && console && console.warn("Possible Unhandled Promise Rejection:", e) }; var l = function () { if ("undefined" != typeof self) return self; if ("undefined" != typeof window) return window; if ("undefined" != typeof global) return global; throw Error("unable to locate global object") }(); "Promise" in l ? l.Promise.prototype["finally"] || (l.Promise.prototype["finally"] = e) : l.Promise = t });

        /**
         * Github Fetch Poly
         * https://github.com/github/fetch
         *
         * Minifed of fetch.umd.js at releases section https://github.com/github/fetch/releases
         */
        !function (t, e) { "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e(t.WHATWGFetch = {}) }(this, function (t) { "use strict"; var e = { searchParams: "URLSearchParams" in self, iterable: "Symbol" in self && "iterator" in Symbol, blob: "FileReader" in self && "Blob" in self && function () { try { return new Blob, !0 } catch (t) { return !1 } }(), formData: "FormData" in self, arrayBuffer: "ArrayBuffer" in self }; if (e.arrayBuffer) var r = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], o = ArrayBuffer.isView || function (t) { return t && r.indexOf(Object.prototype.toString.call(t)) > -1 }; function n(t) { if ("string" != typeof t && (t = String(t)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(t)) throw new TypeError("Invalid character in header field name"); return t.toLowerCase() } function i(t) { return "string" != typeof t && (t = String(t)), t } function s(t) { var r = { next: function () { var e = t.shift(); return { done: void 0 === e, value: e } } }; return e.iterable && (r[Symbol.iterator] = function () { return r }), r } function a(t) { this.map = {}, t instanceof a ? t.forEach(function (t, e) { this.append(e, t) }, this) : Array.isArray(t) ? t.forEach(function (t) { this.append(t[0], t[1]) }, this) : t && Object.getOwnPropertyNames(t).forEach(function (e) { this.append(e, t[e]) }, this) } function h(t) { if (t.bodyUsed) return Promise.reject(new TypeError("Already read")); t.bodyUsed = !0 } function f(t) { return new Promise(function (e, r) { t.onload = function () { e(t.result) }, t.onerror = function () { r(t.error) } }) } function u(t) { var e = new FileReader, r = f(e); return e.readAsArrayBuffer(t), r } function d(t) { if (t.slice) return t.slice(0); var e = new Uint8Array(t.byteLength); return e.set(new Uint8Array(t)), e.buffer } function c() { return this.bodyUsed = !1, this._initBody = function (t) { var r; this._bodyInit = t, t ? "string" == typeof t ? this._bodyText = t : e.blob && Blob.prototype.isPrototypeOf(t) ? this._bodyBlob = t : e.formData && FormData.prototype.isPrototypeOf(t) ? this._bodyFormData = t : e.searchParams && URLSearchParams.prototype.isPrototypeOf(t) ? this._bodyText = t.toString() : e.arrayBuffer && e.blob && ((r = t) && DataView.prototype.isPrototypeOf(r)) ? (this._bodyArrayBuffer = d(t.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : e.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(t) || o(t)) ? this._bodyArrayBuffer = d(t) : this._bodyText = t = Object.prototype.toString.call(t) : this._bodyText = "", this.headers.get("content-type") || ("string" == typeof t ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : e.searchParams && URLSearchParams.prototype.isPrototypeOf(t) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8")) }, e.blob && (this.blob = function () { var t = h(this); if (t) return t; if (this._bodyBlob) return Promise.resolve(this._bodyBlob); if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer])); if (this._bodyFormData) throw new Error("could not read FormData body as blob"); return Promise.resolve(new Blob([this._bodyText])) }, this.arrayBuffer = function () { return this._bodyArrayBuffer ? h(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(u) }), this.text = function () { var t, e, r, o = h(this); if (o) return o; if (this._bodyBlob) return t = this._bodyBlob, e = new FileReader, r = f(e), e.readAsText(t), r; if (this._bodyArrayBuffer) return Promise.resolve(function (t) { for (var e = new Uint8Array(t), r = new Array(e.length), o = 0; o < e.length; o++)r[o] = String.fromCharCode(e[o]); return r.join("") }(this._bodyArrayBuffer)); if (this._bodyFormData) throw new Error("could not read FormData body as text"); return Promise.resolve(this._bodyText) }, e.formData && (this.formData = function () { return this.text().then(p) }), this.json = function () { return this.text().then(JSON.parse) }, this } a.prototype.append = function (t, e) { t = n(t), e = i(e); var r = this.map[t]; this.map[t] = r ? r + ", " + e : e }, a.prototype.delete = function (t) { delete this.map[n(t)] }, a.prototype.get = function (t) { return t = n(t), this.has(t) ? this.map[t] : null }, a.prototype.has = function (t) { return this.map.hasOwnProperty(n(t)) }, a.prototype.set = function (t, e) { this.map[n(t)] = i(e) }, a.prototype.forEach = function (t, e) { for (var r in this.map) this.map.hasOwnProperty(r) && t.call(e, this.map[r], r, this) }, a.prototype.keys = function () { var t = []; return this.forEach(function (e, r) { t.push(r) }), s(t) }, a.prototype.values = function () { var t = []; return this.forEach(function (e) { t.push(e) }), s(t) }, a.prototype.entries = function () { var t = []; return this.forEach(function (e, r) { t.push([r, e]) }), s(t) }, e.iterable && (a.prototype[Symbol.iterator] = a.prototype.entries); var l = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"]; function y(t, e) { var r, o, n = (e = e || {}).body; if (t instanceof y) { if (t.bodyUsed) throw new TypeError("Already read"); this.url = t.url, this.credentials = t.credentials, e.headers || (this.headers = new a(t.headers)), this.method = t.method, this.mode = t.mode, this.signal = t.signal, n || null == t._bodyInit || (n = t._bodyInit, t.bodyUsed = !0) } else this.url = String(t); if (this.credentials = e.credentials || this.credentials || "same-origin", !e.headers && this.headers || (this.headers = new a(e.headers)), this.method = (r = e.method || this.method || "GET", o = r.toUpperCase(), l.indexOf(o) > -1 ? o : r), this.mode = e.mode || this.mode || null, this.signal = e.signal || this.signal, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && n) throw new TypeError("Body not allowed for GET or HEAD requests"); this._initBody(n) } function p(t) { var e = new FormData; return t.trim().split("&").forEach(function (t) { if (t) { var r = t.split("="), o = r.shift().replace(/\+/g, " "), n = r.join("=").replace(/\+/g, " "); e.append(decodeURIComponent(o), decodeURIComponent(n)) } }), e } function b(t, e) { e || (e = {}), this.type = "default", this.status = void 0 === e.status ? 200 : e.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in e ? e.statusText : "OK", this.headers = new a(e.headers), this.url = e.url || "", this._initBody(t) } y.prototype.clone = function () { return new y(this, { body: this._bodyInit }) }, c.call(y.prototype), c.call(b.prototype), b.prototype.clone = function () { return new b(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new a(this.headers), url: this.url }) }, b.error = function () { var t = new b(null, { status: 0, statusText: "" }); return t.type = "error", t }; var m = [301, 302, 303, 307, 308]; b.redirect = function (t, e) { if (-1 === m.indexOf(e)) throw new RangeError("Invalid status code"); return new b(null, { status: e, headers: { location: t } }) }, t.DOMException = self.DOMException; try { new t.DOMException } catch (e) { t.DOMException = function (t, e) { this.message = t, this.name = e; var r = Error(t); this.stack = r.stack }, t.DOMException.prototype = Object.create(Error.prototype), t.DOMException.prototype.constructor = t.DOMException } function w(r, o) { return new Promise(function (n, i) { var s = new y(r, o); if (s.signal && s.signal.aborted) return i(new t.DOMException("Aborted", "AbortError")); var h = new XMLHttpRequest; function f() { h.abort() } h.onload = function () { var t, e, r = { status: h.status, statusText: h.statusText, headers: (t = h.getAllResponseHeaders() || "", e = new a, t.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function (t) { var r = t.split(":"), o = r.shift().trim(); if (o) { var n = r.join(":").trim(); e.append(o, n) } }), e) }; r.url = "responseURL" in h ? h.responseURL : r.headers.get("X-Request-URL"); var o = "response" in h ? h.response : h.responseText; n(new b(o, r)) }, h.onerror = function () { i(new TypeError("Network request failed")) }, h.ontimeout = function () { i(new TypeError("Network request failed")) }, h.onabort = function () { i(new t.DOMException("Aborted", "AbortError")) }, h.open(s.method, s.url, !0), "include" === s.credentials ? h.withCredentials = !0 : "omit" === s.credentials && (h.withCredentials = !1), "responseType" in h && e.blob && (h.responseType = "blob"), s.headers.forEach(function (t, e) { h.setRequestHeader(e, t) }), s.signal && (s.signal.addEventListener("abort", f), h.onreadystatechange = function () { 4 === h.readyState && s.signal.removeEventListener("abort", f) }), h.send(void 0 === s._bodyInit ? null : s._bodyInit) }) } w.polyfill = !0, self.fetch || (self.fetch = w, self.Headers = a, self.Request = y, self.Response = b), t.Headers = a, t.Request = y, t.Response = b, t.fetch = w, Object.defineProperty(t, "__esModule", { value: !0 }) });

        function checkResponseStatus(response) {
            if (response.status >= 200 && response.status < 300) {
                return response
            }
            else {
                let error = new Error(response.statusText);
                error.response = response;
                throw error
            }
        }

        function checkCookies() {
            if (!Cookies.get('ORIONCookieTest')) {
                Cookies.set('ORIONCookieTest', 1)
            }
            return Cookies.get('ORIONCookieTest');
        }

        function hasStyxkeyRegion() {
            return Cookies.get('STYXKEY_region');
        }

        function tryLocale() {
            return !Cookies.get('ORION_nolocale');
        }

        function parseJSON(response) {
            return response.json()
        }

        if (checkCookies() && !hasStyxkeyRegion() && tryLocale()) {
            // @todo should we really stop?, stopping because it improves end user experince
            window.stop();
            fetch('/ufc/setregion?_format=json', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(checkResponseStatus)
                .then(parseJSON)
                .then(function (json) {

                    // Write styxkey region
                    if (json.value && !json.redirect) {
                        Cookies.set('STYXKEY_region', json.value, { expires: 1 })
                    }
                    // If can redirect and json.redirect exist (basically has a domain name), go to the new domain name
                    if (json.redirect) {
                        var path = window.location.pathname;

                        window.location.href = json.redirect + path;
                        return true;
                    }

                    // Check now if cookie is set, if not fallback
                    if (!hasStyxkeyRegion()) {
                        let error = new Error(response.statusText);
                        error.response = response;
                        throw error
                    }

                    // Now just reload the page to get the new localized verion of the site/page
                    location.reload();
                }).catch(function (ex) {
                    // Mark this client not try localization for the next 5 mins
                    Cookies.set('ORION_nolocale', 1, { expires: (1 / 24 / 60) * 5 });
                    console.log('something went wrong', ex);
                    location.reload();
                });
        }
    </script>
    <link rel="stylesheet" media="all"
        href="/public/css/css_qs8XW5tewkpJmEgRERBsQfjA3E2yB8skdGhxuAvGDio.css">
    <link rel="stylesheet" media="all" href="/public/css/ufc_overlay.css?r7g58m">
    <link rel="stylesheet" media="all"
        href="/public/css/css_NVUoICFDKEhpDxDh6q0tiNNb7B7wA6U5TsxAb0v-1Uk.css">
    <link rel="stylesheet" media="all"
        href="/public/css/css_NLeLMu-yhOsGxOAeiCOEZI9FqlOZFo6ozuvW1DQNpi0.css">
    <link rel="stylesheet" media="all" href="/public/css/aos.css" content-type="application/stylesheet">
    <link rel="stylesheet" media="all"
        href="/public/css/css_2Qrpj6LOfU-H4G2YZMqA0Y7U9mivI1crAfiwauJBrvs.css">

    <script src="/public/js/modernizr.min.js" content-type="application/javascript"></script>
    <script src="/public/js/modernizr-additional-tests.js?v=3.11.7"  content-type="application/javascript"></script>
<script src="/public/js/jquery-3.6.0.js"></script>
</head>